'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var AppleMobilemeIcon = function AppleMobilemeIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 22,15.0445C 22,17.2291 20.2422,19 18.0733,19L 5.92668,19C 3.75779,19 2.00001,17.2291 2.00001,15.0445C 2.00001,13.0713 3.43333,11.4367 5.3089,11.1378C 5.28446,10.9991 5.27111,10.8569 5.27111,10.7102C 5.27111,9.326 6.38445,8.20378 7.76002,8.20378C 8.37335,8.20378 8.93555,8.42712 9.36668,8.79867C 10.14,7.04512 11.1311,5.44445 13.9089,5.44445C 17.2778,5.44445 18.8734,8.06267 18.8734,10.8251C 18.8734,10.9407 18.8689,11.0551 18.8622,11.1684C 20.6533,11.536 22,13.1316 22,15.0445 Z ' })
  );
};

exports.default = AppleMobilemeIcon;