'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var QuestionMarkCircleIcon = function QuestionMarkCircleIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 12,2C 6.47711,2 2,6.4766 2,12C 2,17.5234 6.47711,22 12,22C 17.5234,22 22,17.5234 22,12C 22,6.4766 17.5234,2 12,2 Z M 13,19L 11,19L 11,17L 13,17L 13,19 Z M 15.0667,11.2537L 14.1716,12.1716C 13.4478,12.8955 13,13.5 13,15L 11,15L 11,14.5002C 11,13.3957 11.4478,12.3957 12.1714,11.6719L 13.4143,10.4141C 13.7761,10.0521 14,9.5522 14,9C 14,7.8954 13.1045,7 12,7C 10.8955,7 10,7.8954 10,9L 8,9C 8,6.7908 9.79099,5 12,5C 14.2092,5 16,6.7908 16,9C 16,9.8801 15.6433,10.6769 15.0667,11.2537 Z ' })
  );
};

exports.default = QuestionMarkCircleIcon;