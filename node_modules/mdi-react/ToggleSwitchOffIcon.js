'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var ToggleSwitchOffIcon = function ToggleSwitchOffIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 6.99992,7.00008C 9.76143,7.00008 11.9999,9.23861 11.9999,12.0001C 11.9999,14.7615 9.76135,17.0001 6.99992,17.0001C 4.23848,17.0001 1.99992,14.7615 1.99992,12.0001C 1.99992,9.23861 4.2384,7.00008 6.99992,7.00008 Z M 20,14.0002L 14,14.0002L 14,10.0002L 20,10.0002C 21.1046,10.0002 21.9999,10.8956 21.9999,12.0002C 21.9999,13.1047 21.1045,14.0002 20,14.0002 Z M 7,9C 5.34315,9 4,10.3431 4,12C 4,13.6569 5.34314,15 7,15C 8.65685,15 10,13.6569 10,12C 10,10.3431 8.65685,9 7,9 Z ' })
  );
};

exports.default = ToggleSwitchOffIcon;