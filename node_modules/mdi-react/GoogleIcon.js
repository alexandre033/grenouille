'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var GoogleIcon = function GoogleIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 21.354,11.1036L 12.18,11.1036L 12.18,13.8258L 18.6862,13.8258C 18.3648,17.6432 15.1889,19.2711 12.191,19.2711C 8.35549,19.2711 5.00866,16.2534 5.00866,12.0236C 5.00866,7.90323 8.19906,4.72992 12.1994,4.72992C 15.2858,4.72992 17.1044,6.69742 17.1044,6.69742L 19.0105,4.72357C 19.0105,4.72357 16.564,2 12.102,2C 6.42078,2 2.02525,6.79543 2.02525,11.9751C 2.02525,17.0506 6.16002,22 12.2471,22C 17.601,22 21.5201,18.3323 21.5201,12.9091C 21.5201,11.7649 21.354,11.1036 21.354,11.1036L 21.354,11.1036 Z ' })
  );
};

exports.default = GoogleIcon;