'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var MessageReplyTextIcon = function MessageReplyTextIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 17.9975,7.9975L 6.00125,7.9975L 6.00125,6.00125L 17.9975,6.00125L 17.9975,7.9975 Z M 17.9975,11.0012L 6.00125,11.0012L 6.00125,8.99875L 17.9975,8.99875L 17.9975,11.0012 Z M 17.9975,13.9987L 6.00125,13.9987L 6.00125,12.0025L 17.9975,12.0025L 17.9975,13.9987 Z M 21.9925,3.99875C 21.9925,2.9 21.0987,2.0025 20,2.0025L 3.99875,2.0025C 2.9,2.0025 2.0025,2.9 2.0025,3.99875L 2.0025,16.0012C 2.0025,17.1 2.9,17.9975 3.99875,17.9975L 17.9975,17.9975L 22.0025,22.0025L 21.9925,3.99875 Z ' })
  );
};

exports.default = MessageReplyTextIcon;