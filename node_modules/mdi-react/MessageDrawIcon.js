'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var MessageDrawIcon = function MessageDrawIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 17.9994,13.9981L 10.4994,13.9981L 12.4994,11.9981L 17.9994,11.9981M 5.99939,13.9981L 5.99939,11.5231L 12.8774,4.64406C 13.0734,4.44907 13.3894,4.44907 13.5854,4.64406L 15.3524,6.41207C 15.5484,6.60706 15.5484,6.92406 15.3524,7.11907L 8.4744,13.9981M 19.9994,1.99807L 3.99939,1.99807C 2.89539,1.99807 2.0094,2.89307 2.0094,3.99807L 1.99939,21.9981L 5.99939,17.9981L 19.9994,17.9981C 21.1034,17.9981 21.9994,17.1031 21.9994,15.9981L 21.9994,3.99807C 21.9994,2.89307 21.1034,1.99807 19.9994,1.99807 Z ' })
  );
};

exports.default = MessageDrawIcon;