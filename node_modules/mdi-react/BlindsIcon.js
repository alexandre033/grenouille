'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var BlindsIcon = function BlindsIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 3,2L 21,2C 21.5523,2 22,2.44772 22,3L 22,5C 22,5.55229 21.5523,6 21,6L 20,6L 20,13C 20,13.5523 19.5523,14 19,14L 13,14L 13,16.1707C 14.1652,16.5825 15,17.6938 15,19C 15,20.6569 13.6569,22 12,22C 10.3431,22 9,20.6569 9,19C 9,17.6938 9.83481,16.5825 11,16.1707L 11,14L 5,14C 4.44771,14 4,13.5523 4,13L 4,6L 3,6C 2.44772,6 2,5.55229 2,5L 2,3C 2,2.44772 2.44772,2 3,2 Z M 12,18C 11.4477,18 11,18.4477 11,19C 11,19.5523 11.4477,20 12,20C 12.5523,20 13,19.5523 13,19C 13,18.4477 12.5523,18 12,18 Z ' })
  );
};

exports.default = BlindsIcon;