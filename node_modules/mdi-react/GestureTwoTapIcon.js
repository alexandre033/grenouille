'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var GestureTwoTapIcon = function GestureTwoTapIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 19,15.14L 19,21.5C 18.974,22.3174 18.3174,22.974 17.5,23L 11,23C 10.6216,23.0009 10.2596,22.8453 10,22.57L 5.1,18.37L 5.84,17.6C 6.03083,17.3942 6.29936,17.2781 6.58,17.28L 6.8,17.28L 10,19L 10,9C 10,8.4477 10.4477,8 11,8C 11.5523,8 12,8.4477 12,9L 12,7C 12,6.4477 12.4477,6 13,6C 13.5523,6 14,6.4477 14,7L 14,12L 18.15,13.84C 18.6595,14.0742 18.9898,14.5794 19,15.14 Z M 15,10.45L 15,9.23611L 15,9.23C 15.2304,9.02526 15.4217,8.793 15.5736,8.54257C 15.8443,8.09183 16,7.5641 16,7.00001C 16,5.34315 14.6568,4.00001 13,4.00001C 12.2064,4.00001 11.4847,4.30817 10.9482,4.81136L 10.8065,4.95338C 10.678,5.09105 10.5623,5.24081 10.4613,5.40079C 10.3585,5.56484 10.2712,5.73834 10.2006,5.91904C 10.1741,5.98769 10.15,6.05756 10.1285,6.12854C 8.89669,6.5019 8,7.64623 8,9C 8,9.69646 8.23732,10.3375 8.63551,10.8466C 8.7444,10.9841 8.86618,11.1125 9,11.23L 9,11.2361L 9,12.46L 9,12.4649C 7.8044,11.7733 7,10.4806 7,9C 7,7.3778 7.96566,5.98114 9.3535,5.35351C 9.98114,3.96566 11.3778,3 13,3C 15.2091,3 17,4.79086 17,7C 17,8.48057 16.1956,9.77325 15,10.4649L 15,10.45 Z ' })
  );
};

exports.default = GestureTwoTapIcon;