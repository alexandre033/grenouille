'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var RoundedCornerIcon = function RoundedCornerIcon(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === undefined ? 24 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === undefined ? 24 : _ref$height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === undefined ? '0 0 24 24' : _ref$viewBox,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['width', 'height', 'viewBox', 'className', 'children']);

  var classes = 'mdi-icon';
  if (className) classes += ' ' + className;

  return _react2.default.createElement(
    'svg',
    _extends({}, props, { width: width, height: height, viewBox: viewBox, className: classes }),
    _react2.default.createElement('path', { d: 'M 19,19L 21,19L 21,21L 19,21L 19,19 Z M 19,17L 21,17L 21,15L 19,15L 19,17 Z M 3,13L 5,13L 5,11L 3,11L 3,13 Z M 3,17L 5,17L 5,15L 3,15L 3,17 Z M 3,9L 5,9L 5,7L 3,7L 3,9 Z M 3,5L 5,5L 5,3L 3,3L 3,5 Z M 7,5L 9,5L 9,3L 7,3L 7,5 Z M 15,21L 17,21L 17,19L 15,19L 15,21 Z M 11,21L 13,21L 13,19L 11,19L 11,21 Z M 15,21L 17,21L 17,19L 15,19L 15,21 Z M 7,21L 9,21L 9,19L 7,19L 7,21 Z M 3,21L 5,21L 5,19L 3,19L 3,21 Z M 21,8C 21,5.24 18.76,3 16,3L 11,3L 11,5L 16,5C 17.65,5 19,6.35 19,8L 19,13L 21,13L 21,8 Z ' })
  );
};

exports.default = RoundedCornerIcon;